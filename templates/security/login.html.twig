{# Utilisation du squelette "base.html.twig" #}
{% extends "base.html.twig" %}

{# Définition du titre de la page #}
{% block title %}Connexion{% endblock %}

{# Remplissage du body de la page #}
{% block body %}

    <div class="flex justify-center items-center min-h-screen bg-gray-100">

        <div class="w-full max-w-md">

            <form action="{{ path('app_login') }}" method="POST" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">

                {% if error %}
                    <div class="bg-red-500 text-white text-center py-2 px-4">{{ error.messageKey|trans(error.messageData, 'security') }}</div>
            {#Class idem que celle de bootstrap avec alert alert-danger mais version Tailwind Css#}
                {% endif %}

                <h1 class="text-center">Connectez-vous</h1>

            {#Champ email#}
            {# L'utilité d'utilisé {{ last_username }} dans le champs Email est que Twig permet l'echappement HTML des variables, ce qui aide à prévenir des attaques par injection de code, autrement j'aurais utilisé 'htmlspecialchars'}}#}
                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="inputEmail">
            {# E-mail#}
                    </label>
                    <input value="{{ last_username }}" type="text" name="email" id="inputEmail" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" placeholder="Adresse e-mail" required autofocus>
                </div>

            {# Champ mot de passe#}
                <div class="mb-6">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="inputPassword">
{#                        Mot de passe#}
                    </label>
                    <input type="password" name="password" id="inputPassword" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" placeholder="**********" required>
                    <p class="text-red-500 text-xs italic">Veuillez saisir un mot de passe.</p>
                </div>

            {# Champ invisible token anti attaque CSRF#}
                <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">

{#                 Bouton de validation#}
                <div class="flex items-center justify-between">
                    <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full md:w-auto" value="Connexion">
                        Connexion
                    </button>
{#                    <a class="inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800" href="#">#}
                    {#Mot de passe oublié ?#}
{#                    </a>#}
                </div>

            </form>

            <p class="text-center text-gray-500 text-xs">
                &copy; 2023 GLGC. Tous droits réservés.
            </p>

        </div>
    </div>


{#    {% if app.user %}#}
{#        <div class="mb-3">#}
{#            Vous êtes connecté en tant que {{ app.user.userIdentifier }}, <a href="{{ path('app_logout') }}">Déconnexion</a>#}
{#        </div>#}
{#    {% endif %}#}


    <script>
        $(document).ready(function() {
            // Récupérez l'icône de l'œil
            let eyeIcon = $('<i class="fas fa-eye"></i>');
            let eyeSlashIcon = $('<i class="fas fa-eye-slash"></i>');

            // Récupérez le champ du mot de passe
            let passwordInput = $('#inputPassword');

            // Ajoutez l'icône de l'œil à côté du champ du mot de passe
            passwordInput.after(eyeIcon);

            // Fonction pour changer le type du champ entre "password" et "text"
            function togglePasswordVisibility() {
                let type = passwordInput.attr('type');
                if (type === 'password') {
                    passwordInput.attr('type', 'text');
                    eyeIcon.replaceWith(eyeSlashIcon);
                } else {
                    passwordInput.attr('type', 'password');
                    eyeSlashIcon.replaceWith(eyeIcon);
                }
            }

            // Gérez le clic sur l'icône de l'œil pour afficher ou masquer le mot de passe
            eyeIcon.click(togglePasswordVisibility);
            eyeSlashIcon.click(togglePasswordVisibility);
        });
    </script>

{% endblock %}